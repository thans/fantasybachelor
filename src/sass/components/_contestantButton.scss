@import '../constants/colors';
@import '../constants/fonts';
@import '../mixins/icons';
@import '../mixins/size';
@import '../mixins/mobile';
@import '../mixins/shadow';
@import '../mixins/border';
@import '../mixins/position';

$contestantButtonSize: 100px;
$contestantButtonSizeMobile: $contestantButtonSize * 2;
$contestantButtonIconSize: 60px;
$contestantButtonIconSizeMobile: $contestantButtonIconSize * 2;
$contestantButtonLabelHeight: 22px;
$contestantButtonLabelHeightMobile: $contestantButtonLabelHeight * 2;


$smallContestantButtonSize: 50px;
$smallContestantButtonSizeMobile: 1.5 * $smallContestantButtonSize;
$smallContestantButtonIconSize: 30px;
$smallContestantButtonIconSizeMobile: 1.5 * $smallContestantButtonIconSize;

contestant-button {
  display: inline-block;

  @include relative();

  &.disabled {
    opacity: .5;
  }

  .label {
    text-align: center;
    text-transform: lowercase;
    height: $contestantButtonLabelHeight;

    &.role {
      @include boldFontWeight();
    }

    @include mobile() {
      height: $contestantButtonLabelHeightMobile;
    }
  }

  .circle {
    @include relative();
    @include size($contestantButtonSize);
    display: inline-block;
    border-radius: 50%;
    z-index: 1;
    background-color: $white;
    pointer-events: none;
    overflow: hidden;

    @include boxShadow();
    @include defaultBorder();

    @include mobile() {
      @include size($contestantButtonSizeMobile);
    }

    img {
      @include absolute(0, 0);
      width: 100%;
      height: 100%;
      background-size: cover;

      opacity: 1;
      transition: opacity .1s linear;

      &.loading {
        opacity: 0;
      }
    }

    .icon {
      @include absolute(0, 0);
      @include size($contestantButtonIconSize, null, true);
      margin: ($contestantButtonSize - $contestantButtonIconSize) / 2 - $borderWidth;

      @include mobile() {
        @include size($contestantButtonIconSizeMobile, null, true);
        margin: ($contestantButtonSizeMobile - $contestantButtonIconSizeMobile) / 2 - $borderWidthMobile;
      }

      opacity: 1;
      transition: opacity .1s linear;

      &.imageLoaded {
        opacity: 0;
      }

      &.stealer {
        @include icon($stealerRed);
      }

      &.kisser {
        @include icon($kisserRed);
      }

      &.lover {
        @include icon($loverRed);
      }

      &.bleeper {
        @include icon($bleeperRed);
      }

      &.interviewee {
        @include icon($intervieweeRed);
      }

      &.cryer {
        @include icon($cryerRed);
      }

      &.unknown {
        @include icon($helpRed);
      }

      &.close {
        @extend .icon;
        @include icon($closeRed);
        opacity: .5;
      }
    }
  }

  $contestantButtonBadgeSize: 48px;
  $contestantButtonBadgeSizeMobile: 2 * $contestantButtonBadgeSize;
  $contestantButtonBadgeTop: 85px;
  $contestantButtonBadgeTopMobile: 160px;
  $contestantButtonBadgeLeft: 64px;
  $contestantButtonBadgeLeftMobile: 130px;
  .badge {
    @include absolute($contestantButtonBadgeTop, $contestantButtonBadgeLeft);
    @include size($contestantButtonBadgeSize);
    border-radius: $contestantButtonBadgeSize / 2;
    line-height: $contestantButtonBadgeSize - 2 * $borderThinWidth;
    overflow: hidden;
    z-index: 2;
    opacity: 0;
    transition: opacity .25s linear;
    @include defaultThinBorder();
    @include smallFont();
    @include normalFontWeight();
    @include boxShadow();

    @include mobile() {
      @include absolute($contestantButtonBadgeTopMobile, $contestantButtonBadgeLeftMobile);
      @include size($contestantButtonBadgeSizeMobile);
      border-radius: $contestantButtonBadgeSizeMobile / 2;
      line-height: $contestantButtonBadgeSizeMobile - 2 * $borderThinWidthMobile;
    }

    &.visible {
      opacity: 1;
    }

    &.multiplier {
      background-color: $yellow;
      @include mediumFont();
    }

    &.score {
      background-color: $green;
    }

    &.contestant {
      background-color: $white;

      .image {
        @include size(100%);
      }
    }

    .condensed {
      display: none !important;
    }
  }

  &.small {
    .circle {
      @include size($smallContestantButtonSize);

      @include mobile() {
        @include size($smallContestantButtonSizeMobile);
      }

      .icon {
        @include absolute(0, 0);
        @include size($smallContestantButtonIconSize, null, true);
        margin: ($smallContestantButtonSize - $smallContestantButtonIconSize) / 2 - $borderWidth;

        @include mobile() {
          @include size($smallContestantButtonIconSizeMobile, null, true);
          margin: ($smallContestantButtonSizeMobile - $smallContestantButtonIconSizeMobile) / 2 - $borderWidthMobile;
        }
      }
    }

    .label {
      display: none;
    }

    $smallContestantButtonBadgeSize: 36px;
    $smallContestantButtonBadgeSizeMobile: 1.5 * $smallContestantButtonBadgeSize;
    $smallContestantButtonBadgeTop: 18px;
    $smallContestantButtonBadgeTopMobile: 23px;
    $smallContestantButtonBadgeLeft: 34px;
    $smallContestantButtonBadgeLeftMobile: 45px;
    .badge {
      @include absolute($smallContestantButtonBadgeTop, $smallContestantButtonBadgeLeft);
      @include size($smallContestantButtonBadgeSize);
      border-radius: $smallContestantButtonBadgeSize / 2;
      line-height: $smallContestantButtonBadgeSize - 2 * $borderThinWidth;

      @include mobile() {
        @include absolute($smallContestantButtonBadgeTopMobile, $smallContestantButtonBadgeLeftMobile);
        @include size($smallContestantButtonBadgeSizeMobile);
        border-radius: $smallContestantButtonBadgeSizeMobile / 2;
        line-height: $smallContestantButtonBadgeSizeMobile - 2 * $borderThinWidthMobile;
      }

      &.score {
        @include tinyFont();
      }

      .condensed {
        @include mobile() {
          display: initial !important;
        }
        @include desktop() {
          display: none !important;
        }
      }

      .expanded {
        @include mobile() {
          display: none !important;
        }
        @include desktop() {
          display: initial !important;
        }
      }
    }
  }

}